{"version":3,"sources":["components/Locate.tsx","hooks/useToggleArray.ts","components/Search.tsx","components/MapContainer.tsx","views/Map.tsx","components/GridButton.tsx","components/charts/LineChart.tsx","components/charts/RadarChart.tsx","components/charts/StackedBarChart.tsx","views/Stats.tsx","components/ArticleComponent.tsx","components/TweetComponent.tsx","views/News.tsx","hooks/useTweetState.ts","App.tsx","views/Info.tsx","serviceWorker.ts","index.tsx"],"names":["Locate","panTo","className","IconButton","aria-label","onClick","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","init","useState","values","setValues","value","oldState","includes","filter","v","Search","selectMarker","usePlacesAutocomplete","requestOptions","types","location","equals","latLng","toUrlValue","toJSON","radius","ready","suggestions","status","data","setValue","clearSuggestions","onSelect","address","a","getGeocode","results","place_id","getLatLng","console","log","onChange","e","target","disabled","placeholder","map","id","description","key","libraries","containerStyle","width","height","display","center","mapOptions","disableDefaultUI","zoomControl","styles","featureType","stylers","visibility","markerClustererOptions","imagePath","React","memo","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","markers","setMarkers","selected","setSelected","useToggleArray","filters","setFilters","applyFilter","markerKeys","result","push","placeId","marker","name","split","google_place_id","type","find","geometry","tp_stock","hs_stock","mask_stock","axios","post","res","useEffect","get","then","mapRef","useRef","onMapLoad","useCallback","current","setZoom","setStock","commodity","inStock","undefined","Paper","elevation","Tooltip","title","Fragment","placement","arrow","ToggleButtonGroup","orientation","ToggleButton","src","alt","mapContainerStyle","zoom","options","onLoad","clusterer","Object","keys","filterResults","markerKey","icon","url","scaledSize","window","google","maps","Size","origin","Point","anchor","onCloseClick","event","MapView","percent","active","children","Button","color","variant","LinearProgress","randomColour","random","Math","floor","regions","dataArgs","lines","setLines","r","dataKey","stroke","dot","strokeWidth","margin","top","right","bottom","left","hide","formatter","replace","startIndex","line","cloneElement","args","confirmed","deaths","recovered","total","chartData","region","Confirmed","Deaths","Active","Recovered","fullMark","outerRadius","length","fill","fillOpacity","prepedData","stackId","provinces","countries","canada","setCanada","argsSelected","toggleArg","provincesSelected","toggleProvince","countriesSelected","toggleCountry","dataLastIndex","canadaData","globalData","currSelected","currToggle","currSelectedTotal","reduce","prov","i","pObj","GridButton","round","LineChart","StackedBarChart","RadarChart","ArticleComponent","this","props","href","Date","publishedAt","toLocaleTimeString","hour","minute","Component","TweetComponent","user","profile_image_url","text","created_at","screen_name","newsapi","require","Articleslist","articles","setArticles","v2","topHeadlines","q","category","language","country","pageSize","response","catch","err","article","index","Tweetlist","initTweets","tweets","setTweets","tweet","filteredResult","Array","isArray","forEach","t","sort","aID","bID","useTweetState","addTweets","socket","socketIOClient","on","off","removeAllListeners","Routes","NewsView","InfoView","App","Map","route","setRoute","links","label","to","Stats","News","Info","Tabs","indicatorColor","textColor","centered","link","Tab","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e114327d.chunk.js","sourcesContent":["import React from 'react';\nimport {IconButton} from '@material-ui/core';\nimport ExploreIcon from '@material-ui/icons/Explore';\n\ntype LocateProps = {panTo: ({lat, lng}:any)=> void}\nconst Locate = function ({panTo}:LocateProps) {\n  return (\n  <div className=\"locate\">\n    <IconButton aria-label=\"locate\" onClick={()=> {\n      navigator.geolocation.getCurrentPosition((position) => {\n        panTo({lat: position.coords.latitude, lng: position.coords.longitude})\n      }, () => null);\n\n    }}>\n      <ExploreIcon/>\n    </IconButton>\n  </div>\n  );  \n}\n\n\nexport default Locate;","import { useState } from 'react'\n\nexport default (init: string[]): [string[], (value: string) => void] => {\n  const [values, setValues] = useState(init)\n\n  const toggle = (value: string) => {\n    setValues(oldState => {\n      return oldState.includes(value) ?\n        oldState.filter(v => v !== value) :\n        [...oldState, value]\n    })\n  }\n\n  return [values, toggle]\n}","import React from 'react';\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\ntype SearchProps = {panTo: ({lat, lng}:any)=> void, selectMarker: (place_id:string, address: string, result: any) => void }\nexport default function Search ({panTo, selectMarker}:SearchProps) {\n  const {ready, value, suggestions: {status, data}, setValue, clearSuggestions} = usePlacesAutocomplete({\n    requestOptions: {\n      types: ['establishment'],\n      location: {\n        lat: () => 49.282730,\n        lng: ()=> -123.120735,\n        equals: (latLng) => {\n          if(latLng.lat() === 49.282730 && latLng.lng() === -123.120735) return true;\n          else return false;\n        },\n        toUrlValue: () =>  \"49.28730,-123120735\",\n        toJSON: () => { \n          return {lat: 49.282730, lng: -123.120735};\n        }\n      },\n      radius: 10 * 1000\n    },\n  });\n\n  return (\n    <div className=\"search\">\n      <Combobox \n          onSelect= { async (address) => {\n            setValue(address, false);\n            clearSuggestions();\n            try{\n              const results = await getGeocode({address});\n              const place_id = results[0].place_id;\n              await selectMarker(place_id, address, results[0]);\n              const {lat, lng} = await getLatLng(results[0]);\n              panTo({lat, lng});\n              setValue(\"\", false);\n            }catch (error) {\n              console.log(error);\n            }\n          \n          }}>\n        <ComboboxInput \n          value={value} \n          onChange={(e:Event)=> { if(e.target) setValue((e.target as HTMLTextAreaElement).value)}}\n          disabled={!ready}\n          placeholder=\"Find a store\"\n        />\n        <ComboboxPopover >\n          <ComboboxList>         {status === \"OK\" &&\n              data.map(({id, description}) => \n                <ComboboxOption key={id} value={description} />\n              )}\n          </ComboboxList>\n  \n        </ComboboxPopover>\n\n      </Combobox>\n      </div>);\n}","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, MarkerClusterer } from '@react-google-maps/api';\nimport Locate from './Locate';\nimport {Paper, IconButton, Tooltip} from '@material-ui/core';\nimport {ToggleButtonGroup, ToggleButton} from '@material-ui/lab';\nimport  ClearIcon from '@material-ui/icons/Clear';\nimport  CheckIcon from '@material-ui/icons/Check';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport axios from 'axios';\nimport useToggleArray from '../hooks/useToggleArray';\n\nimport Search from './Search';\n\nconst libraries = [\"places\"];\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  display: 'inline-block',\n  // 'borderRadius': '15px',\n  // 'boxShadow': '5px 10px #888888'\n\n};\n\nconst center = {\n  lat: 49.282730,\n  lng: -123.120735\n};\n\nconst noPoi: any = [ //google types disagreement\n  {\n      featureType: \"poi\",\n      stylers: [\n        { visibility: \"off\" }\n      ]   \n    }\n  ];\n\nconst mapOptions = {\n  disableDefaultUI: true,\n  zoomControl: true,\n  styles: noPoi\n}\n\nconst markerClustererOptions = { imagePath: '/markerClusterer/m'};\n\nfunction MapContainer() {\n\n  \n  interface IMarker {\n    [index: string]: string | number;\n    id: number;\n    name: string;\n    google_place_id: string;\n    type: string;\n    lat: number;\n    lng: number;\n    tp_stock: string;\n    hs_stock: string;\n    mask_stock: string;\n  }\n\n  interface IMarkerDictionary {\n    [index: string]: IMarker;\n\n  }\n\n  const {isLoaded, loadError} = useLoadScript({ googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY, libraries});\n  const [markers, setMarkers] = React.useState<IMarkerDictionary>({});\n  const [selected, setSelected] = React.useState<IMarker | null>(null);\n  const [filters, setFilters] = useToggleArray([]);\n  \n\n  const filterResults = function () {\n    let results = Object.keys(markers);\n\n    if(filters.includes(\"tp\")) {\n      results = applyFilter(results, 'tp');\n    }\n    if(filters.includes(\"hs\")) {\n      results = applyFilter(results, \"hs\");\n    }\n    if(filters.includes(\"mask\")){\n      results = applyFilter(results, \"mask\");\n    }\n    return results;\n  }\n\n  const applyFilter = function(markerKeys:string[], filter: string) {\n    const result = [];\n\n    for(const key of markerKeys) {\n      if(markers[key][filter+'_stock'] === \"In Stock\") {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  const selectMarker = async function(placeId: string, address: string, result: any)  {\n    \n    if(markers[placeId]) {\n      setSelected(markers[placeId]);\n    } else {\n      const marker: IMarker= {\n        id: 0, \n        name: address.split(',')[0],\n        google_place_id: placeId,\n        type: result.types.find((e:string) => e.includes('pharmacy')) ? 'pharmacy' : 'supermarket', // TODO get it detecting pharmacy\n        lat: result.geometry.location.lat(),\n        lng: result.geometry.location.lng(),\n        tp_stock: \"Unknown\",\n        hs_stock: \"Unknown\",\n        mask_stock: \"Unknown\"\n      };\n      const res = await axios.post('/api/markers', {name: marker.name, google_place_id: marker.google_place_id, lat: marker.lat, lng: marker.lng, type: marker.type });\n      marker.id = res.data.id;\n      setMarkers({...markers, [placeId]: marker});\n      setSelected(marker);\n      \n    }\n  }\n\n  React.useEffect( () => {\n    axios.get(\"/api/markers\")\n    .then( data =>  setMarkers(data.data.data));\n  }, [])\n  //for controlling pan of map\n  const mapRef : React.MutableRefObject<GoogleMap | undefined> = React.useRef();\n  const onMapLoad = React.useCallback((map) => {mapRef.current = map;}, []);\n  const panTo = React.useCallback(({lat,lng}) => {\n    if (mapRef.current) {\n      mapRef.current.panTo({lat, lng});\n      (mapRef.current as any).setZoom(16); //horrible hack but setZoom is undefined on GoogleMap types - though it still works! \n    }\n  }, [])\n\n  //for setting stock on click\n  const setStock = function(commodity: string, inStock?: boolean) {\n    if(selected){\n      if(inStock) {\n        setMarkers({...markers, [selected.google_place_id]:{...selected, [commodity]: \"In Stock\" } });\n        selected[commodity] = \"In Stock\";\n        axios.post(`/api/markers/stockUpdate/${selected.id}`, {[commodity]: \"In Stock\"});\n      } else if (inStock === undefined) {\n        setMarkers({...markers, [selected.google_place_id]:{...selected, [commodity]: \"Unknown\" } });\n        selected[commodity] = \"Unknown\";\n        axios.post(`/api/markers/stockUpdate/${selected.id}`, {[commodity]: \"Unknown\"});\n      } else {\n        setMarkers({...markers, [selected.google_place_id]:{...selected, [commodity]: \"Out of Stock\" } });\n        selected[commodity] = \"Out of Stock\";\n        axios.post(`/api/markers/stockUpdate/${selected.id}`, {[commodity]: \"Out of Stock\"});\n      }\n    }\n  }\n\n\n  if (loadError) return <div> \"Error loading maps\" </div>;\n  if (!isLoaded) return <div>\"Loading\"</div>;\n   \n  return (\n    <Paper className=\"map-wrapper\" elevation={3}>\n      <Locate panTo={panTo}/>\n      <Search panTo={panTo} selectMarker={selectMarker}/>\n      <Tooltip title={<React.Fragment>\n        <h2>Filter stores with stock</h2>\n      </React.Fragment>} placement=\"right\" arrow>\n        <ToggleButtonGroup className=\"filters\" aria-label=\"filters\" orientation=\"vertical\">\n          <ToggleButton  onClick={() => setFilters(\"tp\")} selected={filters.includes(\"tp\")} aria-label=\"has-toilet-paper\">\n            <img src=\"/tp.svg\" alt=\"toilet paper\" className=\"icon\"/>\n          </ToggleButton>\n          <ToggleButton onClick={() => setFilters(\"hs\")} selected={filters.includes(\"hs\")} aria-label=\"has-hand-sanitizer\">\n            <img src=\"/hand-sanitizer.svg\" alt=\"hand sanitizer\" className=\"icon\"/>\n          </ToggleButton>\n          <ToggleButton onClick={() => setFilters(\"mask\")} selected={filters.includes(\"mask\")} aria-label=\"has-masks\">\n            <img src=\"/mask.svg\" alt=\"masks\" className=\"icon\"/>\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Tooltip>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={12}\n        options={mapOptions}\n        onLoad = {onMapLoad}\n      >\n\n\n        <MarkerClusterer options={markerClustererOptions}>\n          {clusterer =>\n            filterResults().map(markerKey => (\n              <Marker \n              key={markerKey} \n              position= {{lat: markers[markerKey].lat, lng: markers[markerKey].lng}} \n              icon= {{\n                url: markers[markerKey].type === 'pharmacy' ? '/pharm.svg' : '/shop_cart.svg',\n                scaledSize: new window.google.maps.Size(30,30),\n                origin: new window.google.maps.Point(0,0),\n                anchor: new window.google.maps.Point(15,15)\n              }}\n              onClick={() => setSelected(markers[markerKey])} \n                clusterer={clusterer} \n                />\n            ))\n          }\n        </MarkerClusterer>\n\n\n\n         {selected ? (\n         \n          <InfoWindow \n              position={{lat: selected.lat, lng: selected.lng}} \n              onCloseClick={() => setSelected(null)}\n            >\n                <div>\n                  <h3>{selected.name}</h3>\n                  \n                  <table>\n                    <tbody>\n                    <Tooltip title={<h3>Update stock levels</h3>} placement=\"right\" arrow> \n                      <tr>\n                        <td><img className=\"icon\" src=\"/tp.svg\" alt=\"toilet paper icon\" /> </td>\n                        <td>{selected.tp_stock}</td>\n                        <td><IconButton aria-label='in-stock' onClick={(event) => setStock('tp_stock', true)}>\n                            <CheckIcon/>\n                        </IconButton></td>\n                        <td><IconButton aria-label='out-of-stock' onClick={(event) => setStock('tp_stock', false)}><ClearIcon/></IconButton></td>\n                        <td><IconButton aria-label='unknown' onClick={(event) => setStock('tp_stock')}><HelpOutlineIcon/></IconButton></td>\n                      </tr>\n                      </Tooltip> \n                      <Tooltip title={<h3>Update stock levels</h3>} placement=\"right\" arrow>\n                      <tr>\n                        <td><img className=\"icon\" src=\"/hand-sanitizer.svg\" alt=\"hand sanitizer icon\"/></td>\n                        <td>{selected.hs_stock}</td>\n                        <td><IconButton aria-label='in-stock'onClick={(event) => setStock('hs_stock', true)}><CheckIcon/></IconButton></td>\n                        <td><IconButton aria-label='out-of-stock' onClick={(event) => setStock('hs_stock', false)}><ClearIcon/></IconButton></td>\n                        <td><IconButton aria-label='unknown' onClick={(event) => setStock('hs_stock')}><HelpOutlineIcon/></IconButton></td>\n                      </tr>\n                      </Tooltip> \n                      <Tooltip title={<h3>Update stock levels</h3>} placement=\"right\" arrow>\n                      <tr>\n                        <td><img className=\"icon\" src=\"/mask.svg\" alt=\"mask icon\"/></td>\n                        <td>{selected.mask_stock}</td>  \n                        <td><IconButton aria-label='in-stock'onClick={(event) => setStock('mask_stock', true)}><CheckIcon/></IconButton></td>\n                        <td><IconButton aria-label='out-of-stock'onClick={(event) => setStock('mask_stock', false)}><ClearIcon/></IconButton></td>  \n                        <td><IconButton aria-label='unknown' onClick={(event) => setStock('mask_stock')}><HelpOutlineIcon/></IconButton></td>\n                      </tr>\n                      </Tooltip>   \n                    </tbody>\n                  </table>\n                </div>\n            </InfoWindow>\n          \n           ) : null}\n        \n      </GoogleMap>\n      </Paper>\n  )\n}\n\nexport default React.memo(MapContainer)\n","import React from 'react';\nimport MapContainer from '../components/MapContainer';\nimport '../styles/map.scss';\n\ninterface IProps {\n\n}\n\nconst MapView: React.FC<IProps> = () => {\n  return (\n   <MapContainer />\n\n  )\n}\n\nexport default MapView","import React from 'react'\nimport { Button, Tooltip, LinearProgress } from '@material-ui/core'\n\ninterface IProps {\n  title: string\n  percent: number\n  onClick: () => void\n  active: boolean,\n  children?: React.ReactNode\n}\n\nexport default ({ title, percent, onClick, active, children }: IProps) => {\n  return (\n    <Tooltip title={title}>\n      <Button color=\"primary\" onClick={onClick} variant={active ? 'contained' : 'text'}>\n        {children}<br />\n        {active && <LinearProgress className=\"Progress\" color=\"secondary\" variant=\"determinate\" value={percent} />}\n      </Button>\n    </Tooltip>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { ResponsiveContainer, LineChart, Tooltip, Brush, Line, XAxis } from 'recharts';\n\ninterface IProps {\n  data: object[]\n  regions: string[]\n  dataArgs: string[]\n}\n\nconst randomColour = () => {\n  const random = () => Math.floor(Math.random() * 255)\n  return `rgb(${random()}, ${random()}, ${random()})`\n}\n\nexport default ({ data, regions, dataArgs }: IProps) => {\n  const [lines, setLines] = useState<React.ReactElement[]>([])\n\n  useEffect(() => {\n    const result = []\n    for (const r of regions) {\n      for (const a of dataArgs) {\n        result.push(<Line key={`${r}_${a}`} type=\"monotone\" dataKey={`${r}_${a}`} stroke={randomColour()} dot={false} strokeWidth={3} />)\n      }\n    }\n    setLines(result)\n  }, [regions, dataArgs])\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\" >\n      <LineChart data={data} margin={{ top: 0, right: 0, bottom: 0, left: 0 }}>\n        <XAxis dataKey=\"date\" hide={false} />\n        <Tooltip formatter={(value, name) => [value, name.replace('_', ' ')]} />\n        {lines}\n        <Brush dataKey=\"date\" startIndex={50}>\n          <LineChart>\n            {lines.map(line => React.cloneElement(line, {stroke: \"rgb(82, 189, 242)\"}))}\n          </LineChart>\n        </Brush>\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}","import React from 'react'\nimport { ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, Radar, Legend } from 'recharts'\n\nconst args: any = {\n  confirmed: {\n    dataKey: \"Confirmed\",\n    color: \"#8884d8\"\n  },\n  deaths: {\n    dataKey: \"Deaths\",\n    color: \"#fd613e\"\n  },\n  active: {\n    dataKey: \"Active\",\n    color: \"#73b2e8\"\n  },\n  recovered: {\n    dataKey: \"Recovered\",\n    color: \"#8deca2\"\n  }\n}\n\ninterface IProps {\n  data: any\n  regions: string[]\n  dataArgs: string[]\n  total: number\n}\n\nexport default ({ data, regions, dataArgs, total }: IProps) => {\n  const chartData = regions.map(r => ({\n    region: r,\n    Confirmed: data[`${r}_confirmed`],\n    Deaths: data[`${r}_deaths`],\n    Active: data[`${r}_active`],\n    Recovered: data[`${r}_recovered`],\n    fullMark: total\n  }))\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RadarChart outerRadius={90} data={chartData}>\n        {dataArgs.length && <PolarGrid />}\n        {dataArgs.length && <PolarAngleAxis dataKey=\"region\" />}\n        <Legend />\n        {dataArgs.map(a => <Radar key={a} dataKey={args[a].dataKey} stroke={args[a].color} fill={args[a].color} fillOpacity={0.6} />)}\n      </RadarChart>\n    </ResponsiveContainer>\n  )\n}","import React from 'react'\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from 'recharts'\n\ninterface IProps {\n  data: any\n  regions: string[]\n}\n\nexport default ({ data, regions }: IProps) => {\n  const prepedData = regions.map(r => ({\n    region: r,\n    Deaths: data[`${r}_deaths`],\n    Active: data[`${r}_active`],\n    Recovered: data[`${r}_recovered`]\n  }))\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart data={prepedData}>\n        <XAxis dataKey=\"region\" />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"Deaths\" stackId=\"a\" fill=\"#fd613e\" />\n        <Bar dataKey=\"Active\" stackId=\"a\" fill=\"#73b2e8\" />\n        <Bar dataKey=\"Recovered\" stackId=\"a\" fill=\"#8deca2\" />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}","import React, { useState } from 'react'\nimport { Paper, Button } from '@material-ui/core'\n\nimport '../styles/Stats.scss'\nimport canadaData from '../data/canada.json'\nimport globalData from '../data/global.json'\nimport useToggleArray from '../hooks/useToggleArray'\nimport GridButton from '../components/GridButton'\nimport LineChart from '../components/charts/LineChart'\nimport RadarChart from '../components/charts/RadarChart'\nimport StackedBarChart from '../components/charts/StackedBarChart'\n\ninterface IParam {\n  title: string,\n  value: string\n}\n\nconst args: IParam[] = [\n  {\n    title: \"Confirmed\",\n    value: \"confirmed\"\n  },\n  {\n    title: \"Deaths\",\n    value: \"deaths\"\n  },\n  {\n    title: \"Recovered\",\n    value: \"recovered\"\n  },\n  {\n    title: \"Active\",\n    value: \"active\"\n  }\n]\n\nconst provinces: IParam[] = [\n  {\n    title: \"Alberta\",\n    value: \"AB\"\n  },\n  {\n    title: \"British Columbia\",\n    value: \"BC\"\n  },\n  {\n    title: \"Manitoba\",\n    value: \"MB\"\n  },\n  {\n    title: \"New Brunswick\",\n    value: \"NB\"\n  },\n  {\n    title: \"Newfoundland and Labrador\",\n    value: \"NL\"\n  },\n  {\n    title: \"Nova Scotia\",\n    value: \"NS\"\n  },\n  {\n    title: \"Northwest Territories\",\n    value: \"NT\"\n  },\n  {\n    title: \"Ontario\",\n    value: \"ON\"\n  },\n  {\n    title: \"Prince Edward Island\",\n    value: \"PE\"\n  },\n  {\n    title: \"Quebec\",\n    value: \"QC\"\n  },\n  {\n    title: \"Saskatchewan\",\n    value: \"SK\"\n  },\n  {\n    title: \"Yukon\",\n    value: \"YT\"\n  }\n]\n\nconst countries: IParam[] = [\n  {\n    title: \"Canada\",\n    value: \"Canada\"\n  },\n  {\n    title: \"Austria\",\n    value: \"Austria\"\n  },\n  {\n    title: \"US\",\n    value: \"US\"\n  },\n  {\n    title: \"Russia\",\n    value: \"Russia\"\n  },\n  {\n    title: \"Italy\",\n    value: \"Italy\"\n  },\n  {\n    title: \"Iran\",\n    value: \"Iran\"\n  },\n  {\n    title: \"New Zealand\",\n    value: \"New Zealand\"\n  },\n  {\n    title: \"South Africa\",\n    value: \"South Africa\"\n  },\n  {\n    title: \"Mexico\",\n    value: \"Mexico\"\n  },\n  {\n    title: \"UK\",\n    value: \"UK\"\n  },\n  {\n    title: \"France\",\n    value: \"France\"\n  },\n  {\n    title: \"Germany\",\n    value: \"Germany\"\n  }\n]\n\ninterface IProps {\n\n}\n\nexport default ({}: IProps) => {\n  const [canada, setCanada] = useState<boolean>(true)\n  const [argsSelected, toggleArg] = useToggleArray([\"confirmed\"])\n  const [provincesSelected, toggleProvince] = useToggleArray([\"AB\", \"BC\",  \"ON\", \"QC\"])\n  const [countriesSelected, toggleCountry] = useToggleArray([\"Canada\", \"Iran\", \"France\", \"Russia\"])\n\n  const dataLastIndex = canada ? (canadaData as any)[canadaData.length - 1] : (globalData as any)[globalData.length - 1]\n  const currSelected = canada ? provincesSelected : countriesSelected\n  const currToggle = canada ? toggleProvince : toggleCountry\n  const currSelectedTotal = currSelected.reduce((total, prov) => {\n    return total + dataLastIndex[`${prov}_confirmed`]\n  }, 0)\n\n  return (\n    <div className=\"Stats\">\n      <header>\n        <Paper className=\"toggle\" elevation={3}>\n          <Button \n            color=\"primary\" \n            variant={canada ? 'contained' : 'outlined'}\n            onClick={() => setCanada(true)}\n          >Canada</Button>\n          <Button \n            color=\"primary\" \n            variant={canada ? 'outlined' : 'contained'}\n            onClick={() => setCanada(false)}\n          >Global</Button>\n        </Paper>\n        <Paper className=\"select\" elevation={3}>\n          {args.map(i => <Button \n              key={i.value}\n              color=\"primary\" \n              variant={argsSelected.includes(i.value) ? 'contained' : 'outlined'}\n              onClick={() => toggleArg(i.value)}\n            >\n              {i.title}\n            </Button>\n          )}\n        </Paper>\n      </header>\n      \n      <Paper className=\"ButtonGroup\" elevation={3}>\n        {(canada ? provinces : countries).map(pObj => {\n          return <GridButton\n            key={pObj.value}\n            title={pObj.title}\n            onClick={() => currToggle(pObj.value)}\n            active={currSelected.includes(pObj.value)}\n            percent={Math.round((dataLastIndex[`${pObj.value}_confirmed`] / currSelectedTotal) * 100)}\n          >\n            {pObj.value}<br/>\n            {dataLastIndex[`${pObj.value}_confirmed`]}\n          </GridButton>\n        })}\n      </Paper>\n\n      <Paper className=\"LineChart\" elevation={3}>\n        <LineChart data={canada ? canadaData : globalData} regions={currSelected} dataArgs={argsSelected} />\n      </Paper>\n\n      <Paper className=\"StackedBarChart\" elevation={3}>\n        <StackedBarChart data={dataLastIndex} regions={currSelected} />\n      </Paper>\n\n      <Paper className=\"RadarChart\" elevation={3}>\n        <RadarChart data={dataLastIndex} regions={currSelected} dataArgs={argsSelected} total={currSelectedTotal} />\n      </Paper>\n    </div>\n  )\n}","import React from 'react';\nimport { Paper } from '@material-ui/core'\nimport '../styles/news.scss'\n\n\nclass ArticleComponent extends React.Component <{data: object}> {\n  render() {\n    let data : any = this.props.data;\n    return (\n      <Paper className=\"Article\" elevation={3}>\n        <a href={data['url']} target=\"_blank\">\n          <img src={data['urlToImage']} alt={data['author']} width=\"300\" />\n        </a>\n        <div className=\"overlay\">\n    <div className=\"text\">Read More</div>\n        </div>\n        <p className=\"title\">{data['title']}</p>\n        <p className=\"date\">{new Date(data.publishedAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>\n      </Paper>\n    )\n  }\n};\n\nexport default ArticleComponent;","import React from 'react';\nimport { Paper } from '@material-ui/core'\n\nclass TweetComponent extends React.Component <{data: any}> {\n  render() {\n    let data = this.props.data;\n\n    return (\n      <Paper className=\"tweet\" elevation={7}>\n            <img className=\"img\" src={data.user.profile_image_url} alt={data.user.name}/>\n            <img className=\"logo\" src='https://github.com/kurtgalvin/LHL-Final/blob/Stretch/Infograph/frontend/docs/twitter.png?raw=true' width= '30px' alt='logo'/>\n            <div className=\"text\">{data.text}</div>\n          <div className=\"date\">\n            {new Date(data.created_at).toLocaleTimeString()}\n          </div>\n            <a className=\"username\" href={`https://twitter.com/${data.user.screen_name}`} target=\"_blank\">{`@${data.user.screen_name}`}</a>\n      </Paper>\n    );\n  }\n}\n\nexport default TweetComponent;","import React, { useState, useEffect } from 'react';\nimport ArticleComponent from '../components/ArticleComponent'\nimport socketIOClient from \"socket.io-client\";\nimport TweetComponent from '../components/TweetComponent';\nimport useTweetState from '../hooks/useTweetState';\nconst NewsAPI = require('newsapi');\nlet newsapi = new NewsAPI(process.env.REACT_APP_new_NEWSAPI);\n\n\n\n\nfunction Articleslist() {\n  const [articles, setArticles] = useState([]);\n  // try {\n  useEffect(() => {\n    newsapi.v2.topHeadlines({\n      // sources: 'vancouver sun',\n      q: 'covid-19',\n      category: 'health',\n      language: 'en',\n      country: 'ca',\n      pageSize: '6'\n    }).then((response : any) => {\n       setArticles(response.articles);\n    }).catch((err: Error) => {\n      console.log(err)\n    })\n\n  }, []);\n\n  return <div className=\"Articles\">\n    {articles.map((article, index) => (\n      <ArticleComponent key={index} data={article} />\n    ))}\n  </div>\n};\n\nfunction Tweetlist() {\n  const [tweets, addTweets] = useTweetState([]);\n\n  useEffect(() => {\n    const socket = socketIOClient('/');\n\n    socket.on('connect', () => {\n      socket.on('tweets', addTweets)\n    });\n\n    socket.on('disconnect', () => {\n      socket.off(\"tweets\")\n      socket.removeAllListeners();\n      console.log(\"Socket Disconnected\");\n    });\n  }, [])\n\n\n  return <div className= \"Tweets\">\n    {tweets.map((tweet: any, index: any) => (\n      <TweetComponent key={tweet.id} data={tweet} />\n    ))}\n  </div>\n\n};\n\ninterface IProps {\n\n}\n\n\nconst NewsView: React.FC<IProps> = () => {\n  return (\n    <div className=\"News\">\n      <Articleslist/>\n      <Tweetlist/>\n    </div>\n  )\n}\n\nexport default NewsView","import { useState } from 'react'\n\nexport default (initTweets: any[]): [any[], (tweet: any | any[]) => void] => {\n  const [tweets, setTweets] = useState(initTweets);\n\n  const addTweet = (tweet: any | any[]) => {\n    console.log(\"NEW TWEET\")\n    setTweets(oldState => {\n      const filteredResult: any = {};\n      const result = Array.isArray(tweet) ? [...tweet, ...oldState] : [tweet, ...oldState];\n      \n      result.forEach(t => filteredResult[t.id] = t)\n      return Object.keys(filteredResult).sort((aID, bID) => {\n        if (new Date(filteredResult[aID].created_at) > new Date(filteredResult[bID].created_at)) {\n          return -1 \n        } return 1\n      }).map(id => filteredResult[id])\n    });\n  }\n\n  return [tweets, addTweet]\n}","import React, { useState } from 'react';\nimport { Paper, Tabs, Tab } from '@material-ui/core'\n\nimport './App.scss';\nimport MapView from './views/Map';\nimport StatsView from './views/Stats';\nimport NewsView from './views/News';\nimport InfoView from './views/Info'\n\n\nenum Routes {\n  Map,\n  Stats,\n  News,\n  Info\n}\n\ninterface Link {\n  label: string,\n  to: () => void\n}\n\nfunction App() {\n  const [route, setRoute] = useState<Routes>(Routes.Map)\n\n  const links: Link[] = [\n    {\n      label: \"Map\",\n      to: () => setRoute(Routes.Map)\n    },\n    {\n      label: \"Stats\",\n      to: () => setRoute(Routes.Stats)\n    },\n    {\n      label: \"News\",\n      to: () => setRoute(Routes.News)\n    },\n    {\n      label: \"Info\",\n      to: () => setRoute(Routes.Info)\n    }\n  ]\n\n  return (\n    <div className=\"App\">\n      <Paper className=\"PaperHeader\" elevation={3}>\n        <div className=\"logo\">\n          <img src=\"/virus.svg\" alt=\"virus\"/>\n          <h2>VanCovid</h2>\n        </div>\n        <Tabs \n          className=\"tabs\"\n          value={route}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered\n        >\n          {links.map((link, i) => <Tab key={i} label={link.label} onClick={link.to} />)}\n        </Tabs>\n      </Paper>\n\n      {route === Routes.Map && <MapView />}\n      {route === Routes.Stats && <StatsView />}\n      {route === Routes.News && <NewsView />}   \n      {route === Routes.Info && <InfoView />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Paper } from '@material-ui/core';\nimport '../styles/Info.scss';\n\ninterface IProps {\n\n}\n\nconst InfoView: React.FC<IProps> = () => {\n  return (\n  <Paper elevation={1} className= \"Container\">\n    <h1 className=\"Title\"> Info You Need To Know\n    </h1>\n    <Paper className=\"coughing\" >\n      <img src='https://github.com/kurtgalvin/LHL-Final/blob/master/frontend/docs/coughing.png?raw=true' alt='coughing' width=\"300\" />\n      <div className='text'>\n        Stay home if you're sick or showing any flu like symptoms.\n      </div>\n    </Paper>\n    <Paper className=\"distancing\">\n      <img src='https://github.com/kurtgalvin/LHL-Final/blob/master/frontend/docs/social-distancing.png?raw=true' alt='distance' width=\"300\" />\n      <div className=\"text\">\n        {/* 2. Physical distancing:   */}\n        Stay at least 2 m away from others outside your home.\n      </div>\n    </Paper>\n    <Paper className=\"Gathering\">\n      <img src='https://github.com/kurtgalvin/LHL-Final/blob/master/frontend/docs/gathering.png?raw=true' alt='gather' width=\"300\" />\n      <div className='text'>\n        Avoid any gatherings of people on private property, at work, or in parks.\n      </div>\n    </Paper>\n    <Paper className=\"Work\">\n      <img src='https://github.com/kurtgalvin/LHL-Final/blob/master/frontend/docs/Work.png?raw=true' alt='work' width=\"300\" />\n      <div className= \"text\">\n        {/* 4. Work at home if you can. */}\n        If your business or organization isn't an essential service, you must ensure 2 m distancing for customers or staff.\n      </div>\n    </Paper>\n    <Paper className=\"Essential\">\n      <img src='https://github.com/kurtgalvin/LHL-Final/blob/master/frontend/docs/essential.png?raw=true' alt='essential' width=\"300\" />\n      <div className=\"text\">\n        {/* 5. Avoid non-essential outings. */}\n        Only go out for groceries, medical needs, or exercise. Exercise alone or with members of your household.\n      </div>\n    </Paper>\n    <Paper className=\"Logo\">\n      <a href=\"https://vancouver.ca/home-property-development/covid-19-coronavirus-within-vancouver.aspx\" target=\"_blank\">\n      <img src='https://github.com/kurtgalvin/LHL-Final/blob/master/frontend/docs/logo.png?raw=true' alt='logo' width=\"300\" />\n      </a>\n      <div className=\"text\">\n        Read More @Vancouver.ca\n      </div>\n    </Paper>\n  </Paper>\n  )\n}\n\nexport default InfoView","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}